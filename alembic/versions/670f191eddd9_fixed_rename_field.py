"""Fixed rename field

Revision ID: 670f191eddd9
Revises: 3f6ea21ac896
Create Date: 2025-02-15 21:40:07.159300

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '670f191eddd9'
down_revision: Union[str, None] = '3f6ea21ac896'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('appointments_attendant_id_fkey', 'appointments', type_='foreignkey')
    op.drop_constraint('appointments_user_id_fkey', 'appointments', type_='foreignkey')
    op.create_foreign_key(None, 'appointments', 'clients', ['user_id'], ['user_id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.create_foreign_key(None, 'appointments', 'attendants', ['attendant_id'], ['user_id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.drop_constraint('attendant_team_attendant_id_fkey', 'attendant_team', type_='foreignkey')
    op.drop_constraint('attendant_team_team_id_fkey', 'attendant_team', type_='foreignkey')
    op.create_foreign_key(None, 'attendant_team', 'teams', ['team_id'], ['team_id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.create_foreign_key(None, 'attendant_team', 'attendants', ['attendant_id'], ['user_id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.drop_constraint('attendants_function_id_fkey', 'attendants', type_='foreignkey')
    op.drop_constraint('attendants_user_id_fkey', 'attendants', type_='foreignkey')
    op.create_foreign_key(None, 'attendants', 'users', ['user_id'], ['id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.create_foreign_key(None, 'attendants', 'functions', ['function_id'], ['function_id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.drop_constraint('availability_attendant_id_fkey', 'availability', type_='foreignkey')
    op.create_foreign_key(None, 'availability', 'attendants', ['attendant_id'], ['user_id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.drop_constraint('client_association_assisted_id_fkey', 'client_association', type_='foreignkey')
    op.drop_constraint('client_association_subscriber_id_fkey', 'client_association', type_='foreignkey')
    op.create_foreign_key(None, 'client_association', 'clients', ['assisted_id'], ['user_id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.create_foreign_key(None, 'client_association', 'clients', ['subscriber_id'], ['user_id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.drop_constraint('client_contact_association_user_contact_id_fkey', 'client_contact_association', type_='foreignkey')
    op.drop_constraint('client_contact_association_user_client_id_fkey', 'client_contact_association', type_='foreignkey')
    op.create_foreign_key(None, 'client_contact_association', 'users', ['user_contact_id'], ['id'], source_schema='elderly_care', referent_schema='elderly_care', ondelete='CASCADE')
    op.create_foreign_key(None, 'client_contact_association', 'clients', ['user_client_id'], ['user_id'], source_schema='elderly_care', referent_schema='elderly_care', ondelete='CASCADE')
    op.drop_constraint('clients_user_id_fkey', 'clients', type_='foreignkey')
    op.drop_constraint('clients_team_id_fkey', 'clients', type_='foreignkey')
    op.create_foreign_key(None, 'clients', 'users', ['user_id'], ['id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.create_foreign_key(None, 'clients', 'teams', ['team_id'], ['team_id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.drop_constraint('document_function_function_id_fkey', 'document_function', type_='foreignkey')
    op.drop_constraint('document_function_document_id_fkey', 'document_function', type_='foreignkey')
    op.create_foreign_key(None, 'document_function', 'functions', ['function_id'], ['function_id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.create_foreign_key(None, 'document_function', 'documents', ['document_id'], ['document_id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.drop_constraint('documents_record_id_fkey', 'documents', type_='foreignkey')
    op.drop_constraint('documents_user_id_fkey', 'documents', type_='foreignkey')
    op.create_foreign_key(None, 'documents', 'records', ['record_id'], ['record_id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.create_foreign_key(None, 'documents', 'clients', ['user_id'], ['user_id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.drop_constraint('events_record_id_fkey', 'events', type_='foreignkey')
    op.create_foreign_key(None, 'events', 'records', ['record_id'], ['record_id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.drop_constraint('notification_configs_user_id_fkey', 'notification_configs', type_='foreignkey')
    op.create_foreign_key(None, 'notification_configs', 'users', ['user_id'], ['id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.drop_constraint('patient_progress_record_id_fkey', 'patient_progress', type_='foreignkey')
    op.drop_constraint('patient_progress_attendant_id_fkey', 'patient_progress', type_='foreignkey')
    op.create_foreign_key(None, 'patient_progress', 'records', ['record_id'], ['record_id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.create_foreign_key(None, 'patient_progress', 'users', ['attendant_id'], ['id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.drop_constraint('records_user_id_fkey', 'records', type_='foreignkey')
    op.create_foreign_key(None, 'records', 'clients', ['user_id'], ['user_id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.drop_constraint('tickets_attendant_id_fkey', 'tickets', type_='foreignkey')
    op.drop_constraint('tickets_event_id_fkey', 'tickets', type_='foreignkey')
    op.create_foreign_key(None, 'tickets', 'users', ['attendant_id'], ['id'], source_schema='elderly_care', referent_schema='elderly_care')
    op.create_foreign_key(None, 'tickets', 'events', ['event_id'], ['event_id'], source_schema='elderly_care', referent_schema='elderly_care')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tickets', schema='elderly_care', type_='foreignkey')
    op.drop_constraint(None, 'tickets', schema='elderly_care', type_='foreignkey')
    op.create_foreign_key('tickets_event_id_fkey', 'tickets', 'events', ['event_id'], ['event_id'])
    op.create_foreign_key('tickets_attendant_id_fkey', 'tickets', 'users', ['attendant_id'], ['id'])
    op.drop_constraint(None, 'records', schema='elderly_care', type_='foreignkey')
    op.create_foreign_key('records_user_id_fkey', 'records', 'clients', ['user_id'], ['user_id'])
    op.drop_constraint(None, 'patient_progress', schema='elderly_care', type_='foreignkey')
    op.drop_constraint(None, 'patient_progress', schema='elderly_care', type_='foreignkey')
    op.create_foreign_key('patient_progress_attendant_id_fkey', 'patient_progress', 'users', ['attendant_id'], ['id'])
    op.create_foreign_key('patient_progress_record_id_fkey', 'patient_progress', 'records', ['record_id'], ['record_id'])
    op.drop_constraint(None, 'notification_configs', schema='elderly_care', type_='foreignkey')
    op.create_foreign_key('notification_configs_user_id_fkey', 'notification_configs', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'events', schema='elderly_care', type_='foreignkey')
    op.create_foreign_key('events_record_id_fkey', 'events', 'records', ['record_id'], ['record_id'])
    op.drop_constraint(None, 'documents', schema='elderly_care', type_='foreignkey')
    op.drop_constraint(None, 'documents', schema='elderly_care', type_='foreignkey')
    op.create_foreign_key('documents_user_id_fkey', 'documents', 'clients', ['user_id'], ['user_id'])
    op.create_foreign_key('documents_record_id_fkey', 'documents', 'records', ['record_id'], ['record_id'])
    op.drop_constraint(None, 'document_function', schema='elderly_care', type_='foreignkey')
    op.drop_constraint(None, 'document_function', schema='elderly_care', type_='foreignkey')
    op.create_foreign_key('document_function_document_id_fkey', 'document_function', 'documents', ['document_id'], ['document_id'])
    op.create_foreign_key('document_function_function_id_fkey', 'document_function', 'functions', ['function_id'], ['function_id'])
    op.drop_constraint(None, 'clients', schema='elderly_care', type_='foreignkey')
    op.drop_constraint(None, 'clients', schema='elderly_care', type_='foreignkey')
    op.create_foreign_key('clients_team_id_fkey', 'clients', 'teams', ['team_id'], ['team_id'])
    op.create_foreign_key('clients_user_id_fkey', 'clients', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'client_contact_association', schema='elderly_care', type_='foreignkey')
    op.drop_constraint(None, 'client_contact_association', schema='elderly_care', type_='foreignkey')
    op.create_foreign_key('client_contact_association_user_client_id_fkey', 'client_contact_association', 'clients', ['user_client_id'], ['user_id'], ondelete='CASCADE')
    op.create_foreign_key('client_contact_association_user_contact_id_fkey', 'client_contact_association', 'users', ['user_contact_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'client_association', schema='elderly_care', type_='foreignkey')
    op.drop_constraint(None, 'client_association', schema='elderly_care', type_='foreignkey')
    op.create_foreign_key('client_association_subscriber_id_fkey', 'client_association', 'clients', ['subscriber_id'], ['user_id'])
    op.create_foreign_key('client_association_assisted_id_fkey', 'client_association', 'clients', ['assisted_id'], ['user_id'])
    op.drop_constraint(None, 'availability', schema='elderly_care', type_='foreignkey')
    op.create_foreign_key('availability_attendant_id_fkey', 'availability', 'attendants', ['attendant_id'], ['user_id'])
    op.drop_constraint(None, 'attendants', schema='elderly_care', type_='foreignkey')
    op.drop_constraint(None, 'attendants', schema='elderly_care', type_='foreignkey')
    op.create_foreign_key('attendants_user_id_fkey', 'attendants', 'users', ['user_id'], ['id'])
    op.create_foreign_key('attendants_function_id_fkey', 'attendants', 'functions', ['function_id'], ['function_id'])
    op.drop_constraint(None, 'attendant_team', schema='elderly_care', type_='foreignkey')
    op.drop_constraint(None, 'attendant_team', schema='elderly_care', type_='foreignkey')
    op.create_foreign_key('attendant_team_team_id_fkey', 'attendant_team', 'teams', ['team_id'], ['team_id'])
    op.create_foreign_key('attendant_team_attendant_id_fkey', 'attendant_team', 'attendants', ['attendant_id'], ['user_id'])
    op.drop_constraint(None, 'appointments', schema='elderly_care', type_='foreignkey')
    op.drop_constraint(None, 'appointments', schema='elderly_care', type_='foreignkey')
    op.create_foreign_key('appointments_user_id_fkey', 'appointments', 'clients', ['user_id'], ['user_id'])
    op.create_foreign_key('appointments_attendant_id_fkey', 'appointments', 'attendants', ['attendant_id'], ['user_id'])
    # ### end Alembic commands ###
