[tool.poetry]
name = "backendeldery"
version = "0.1.0"
description = ""
authors = ["andrenunes <andremarcelonunes@gmail.com>"]
readme = "README.md"
[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.6"
starlette = ">=0.40.0,<0.42.0"
uvicorn = "^0.34.0"
sqlalchemy = "^2.0.36"
psycopg2-binary = "^2.9.10"
pymongo = ">=4.9,<4.10"
motor = "^3.6.0"
pydantic-settings = "^2.7.0"
passlib = "^1.7.4"
bcrypt = "==3.2.0"
pydantic = { extras = ["all"], version = "^2.11.0" }
crud = "^0.1"
pytest = "^8.3.5"
pytest-mock = "^3.14.0"
pytest-asyncio = "^0.26.0"
httpx = "^0.28.1"
python-dotenv = "^1.0.1"
black = "^25.1.0"
psycopg2 = "^2.9.10"
alembic = "^1.14.1"
asyncpg = "^0.30.0"
greenlet = "^3.1.1"
ruff = "^0.11.1"
email-validator = "^2.2.0"
allure-pytest = "^2.13.5"
aiosqlite = "^0.21.0"


[tool.poetry.group.dev.dependencies]
pytest-cov = "^6.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Ativa uma série de regras recomendadas
select = ["E", "F", "I", "N", "W", "B", "C4", "UP"]
ignore = []

# Permite no máximo 88 caracteres por linha
line-length = 88

# Versão do Python a ser considerada
target-version = "py312"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-first-party = ["backendeldery"]
